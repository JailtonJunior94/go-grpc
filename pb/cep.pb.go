// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: cep.proto

package protos

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CepRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cep string `protobuf:"bytes,1,opt,name=cep,proto3" json:"cep,omitempty"`
}

func (x *CepRequest) Reset() {
	*x = CepRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cep_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CepRequest) ProtoMessage() {}

func (x *CepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cep_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CepRequest.ProtoReflect.Descriptor instead.
func (*CepRequest) Descriptor() ([]byte, []int) {
	return file_cep_proto_rawDescGZIP(), []int{0}
}

func (x *CepRequest) GetCep() string {
	if x != nil {
		return x.Cep
	}
	return ""
}

type CepResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cep         string `protobuf:"bytes,1,opt,name=cep,proto3" json:"cep,omitempty"`
	Logradouro  string `protobuf:"bytes,2,opt,name=logradouro,proto3" json:"logradouro,omitempty"`
	Complemento string `protobuf:"bytes,3,opt,name=complemento,proto3" json:"complemento,omitempty"`
	Bairro      string `protobuf:"bytes,4,opt,name=bairro,proto3" json:"bairro,omitempty"`
	Localidade  string `protobuf:"bytes,5,opt,name=localidade,proto3" json:"localidade,omitempty"`
	Uf          string `protobuf:"bytes,6,opt,name=uf,proto3" json:"uf,omitempty"`
	Ibge        string `protobuf:"bytes,7,opt,name=ibge,proto3" json:"ibge,omitempty"`
	Gia         string `protobuf:"bytes,8,opt,name=gia,proto3" json:"gia,omitempty"`
	Ddd         string `protobuf:"bytes,9,opt,name=ddd,proto3" json:"ddd,omitempty"`
	Siafi       string `protobuf:"bytes,10,opt,name=siafi,proto3" json:"siafi,omitempty"`
}

func (x *CepResponse) Reset() {
	*x = CepResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cep_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CepResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CepResponse) ProtoMessage() {}

func (x *CepResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cep_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CepResponse.ProtoReflect.Descriptor instead.
func (*CepResponse) Descriptor() ([]byte, []int) {
	return file_cep_proto_rawDescGZIP(), []int{1}
}

func (x *CepResponse) GetCep() string {
	if x != nil {
		return x.Cep
	}
	return ""
}

func (x *CepResponse) GetLogradouro() string {
	if x != nil {
		return x.Logradouro
	}
	return ""
}

func (x *CepResponse) GetComplemento() string {
	if x != nil {
		return x.Complemento
	}
	return ""
}

func (x *CepResponse) GetBairro() string {
	if x != nil {
		return x.Bairro
	}
	return ""
}

func (x *CepResponse) GetLocalidade() string {
	if x != nil {
		return x.Localidade
	}
	return ""
}

func (x *CepResponse) GetUf() string {
	if x != nil {
		return x.Uf
	}
	return ""
}

func (x *CepResponse) GetIbge() string {
	if x != nil {
		return x.Ibge
	}
	return ""
}

func (x *CepResponse) GetGia() string {
	if x != nil {
		return x.Gia
	}
	return ""
}

func (x *CepResponse) GetDdd() string {
	if x != nil {
		return x.Ddd
	}
	return ""
}

func (x *CepResponse) GetSiafi() string {
	if x != nil {
		return x.Siafi
	}
	return ""
}

var File_cep_proto protoreflect.FileDescriptor

var file_cep_proto_rawDesc = []byte{
	0x0a, 0x09, 0x63, 0x65, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x22, 0x1e, 0x0a, 0x0a, 0x43, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x63, 0x65, 0x70, 0x22, 0xf7, 0x01, 0x0a, 0x0b, 0x43, 0x65, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x63, 0x65, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x6f,
	0x75, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x72, 0x61,
	0x64, 0x6f, 0x75, 0x72, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x69, 0x72, 0x72,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x61, 0x69, 0x72, 0x72, 0x6f, 0x12,
	0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x64, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x75, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x75, 0x66, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x62, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x62, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x67, 0x69, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x64, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x64, 0x64, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x61, 0x66, 0x69,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x69, 0x61, 0x66, 0x69, 0x32, 0x41, 0x0a,
	0x0a, 0x43, 0x65, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x47,
	0x65, 0x74, 0x43, 0x65, 0x70, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43,
	0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x43, 0x65, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cep_proto_rawDescOnce sync.Once
	file_cep_proto_rawDescData = file_cep_proto_rawDesc
)

func file_cep_proto_rawDescGZIP() []byte {
	file_cep_proto_rawDescOnce.Do(func() {
		file_cep_proto_rawDescData = protoimpl.X.CompressGZIP(file_cep_proto_rawDescData)
	})
	return file_cep_proto_rawDescData
}

var file_cep_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_cep_proto_goTypes = []interface{}{
	(*CepRequest)(nil),  // 0: protos.CepRequest
	(*CepResponse)(nil), // 1: protos.CepResponse
}
var file_cep_proto_depIdxs = []int32{
	0, // 0: protos.CepService.GetCep:input_type -> protos.CepRequest
	1, // 1: protos.CepService.GetCep:output_type -> protos.CepResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cep_proto_init() }
func file_cep_proto_init() {
	if File_cep_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cep_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CepRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cep_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CepResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cep_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cep_proto_goTypes,
		DependencyIndexes: file_cep_proto_depIdxs,
		MessageInfos:      file_cep_proto_msgTypes,
	}.Build()
	File_cep_proto = out.File
	file_cep_proto_rawDesc = nil
	file_cep_proto_goTypes = nil
	file_cep_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CepServiceClient is the client API for CepService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CepServiceClient interface {
	GetCep(ctx context.Context, in *CepRequest, opts ...grpc.CallOption) (*CepResponse, error)
}

type cepServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCepServiceClient(cc grpc.ClientConnInterface) CepServiceClient {
	return &cepServiceClient{cc}
}

func (c *cepServiceClient) GetCep(ctx context.Context, in *CepRequest, opts ...grpc.CallOption) (*CepResponse, error) {
	out := new(CepResponse)
	err := c.cc.Invoke(ctx, "/protos.CepService/GetCep", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CepServiceServer is the server API for CepService service.
type CepServiceServer interface {
	GetCep(context.Context, *CepRequest) (*CepResponse, error)
}

// UnimplementedCepServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCepServiceServer struct {
}

func (*UnimplementedCepServiceServer) GetCep(context.Context, *CepRequest) (*CepResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCep not implemented")
}

func RegisterCepServiceServer(s *grpc.Server, srv CepServiceServer) {
	s.RegisterService(&_CepService_serviceDesc, srv)
}

func _CepService_GetCep_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CepRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CepServiceServer).GetCep(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.CepService/GetCep",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CepServiceServer).GetCep(ctx, req.(*CepRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CepService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.CepService",
	HandlerType: (*CepServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCep",
			Handler:    _CepService_GetCep_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cep.proto",
}
